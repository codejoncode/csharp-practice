using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MorganAndAString
{
    class Program
    {
        /**
         *
         * Can only pull from the top of each stack 
         * compare the top of each string   
         * when even must compare strings to figure out which string is lexicographically smaller. 
         * this is the string to pull from in the case of a tie. 
         * if there is a case we finish one string   just add the remaining portion to the end of the result
         * 
         */
         static int comparision (string a, string b, int aa,  int bb)
        {
            while(aa < a.Length && bb < b.Length)
            {
                if(a[aa] < b[bb])
                {
                    return -1; 
                }
                if (a[aa] > b[bb])
                {
                    return 1; 
                }
                aa++;
                bb++;
            }
            return aa < a.Length ? -1 : 1; 
        }
        //the end solution why is it faster?  
        /**
         *Well comparison is working until it finds something less than or greater than on average it will not get to the end. 
         * So only perform this once. In the begining i was using .CompareTo in which there was not telling its time complexity because
         * I can't see the implementation but also doing so I needed to use  .SubString inside of the loop and then I was using .CompareTo 
         * in each condition.   This new method says do what is needed at the top of the loop and then though I have introduced new while loops
         * The issue is slowness was that  when the  string  had the same character say  CCCCCCCCCZAAAA    vs   CCCDY   comparisions where done
         * by using the while loop all of the C's are removed before the next comparision so it allows it to move faster without having to compare
         * is this less than or greater than and then what to do.  if the letter is the same keep running it. Almost like keep you foot on the gas pedal. 
         * Kind of like the Lambda treasure hunt problem. In the event that there is a room we enter and we can't go in that direction we previously went in
         * go ahead and  check for an available room.  But  if we can keep going north let's do that until we enter a room where they don't have an north 
         * or perhaps we already visited that room and went north before. Similar technique but   different to implement.  
         */
        static string morganAndString(string a, string b)
        {
            var result = new StringBuilder(a.Length + b.Length);
            int aFront = 0;
            int bFront = 0;

            while (aFront < a.Length && bFront < b.Length)
            {
                int comparedItems = comparision(a, b, aFront, bFront);
                switch(comparedItems)
                {
                    case -1:
                    case 0:
                        //drop -1 to zero everytime
                        var aa = a[aFront];
                        while (aFront < a.Length && aa == a[aFront])
                        {
                            result.Append(aa);
                            aFront++; 
                        }
                        break;
                    case 1:
                        var bb = b[bFront];
                        while (bFront < b.Length && bb == b[bFront])
                        {
                            result.Append(bb);
                            bFront++; 
                        }
                        break; 
                }
            }
            //incase the while loop ends early 
            if (aFront < a.Length)
            {
                //result += a.Substring(aFront);
                result.Append(a.Substring(aFront));
            }
            if (bFront < b.Length)
            {
                //result += b.Substring(bFront);
                result.Append(b.Substring(bFront));
            }
            return result.ToString();
        }
        //still not fast enough only 5 test cases make it through  timed out on the rest
        static string morganAndString4(string a, string b)
        {
            var result = new StringBuilder(a.Length + b.Length);
            int aFront = 0;
            int bFront = 0;
            //switching from or to and because once  one has reached the max index I can just add 
            //the other to the end and i'm done. I don't know why I had the minus 1. 
            while (aFront < a.Length && bFront < b.Length)
            {
                if (aFront < a.Length && bFront < b.Length)
                {
                    if (a[aFront] < b[bFront])
                    {
                        //result += a[aFront].ToString(); //  ToString may double the size  while appending is O(1)
                        result.Append(a[aFront]);
                        aFront++;
                    }
                    else if (b[bFront] < a[aFront])
                    {
                        //result += b[bFront].ToString();
                        result.Append(b[bFront]);
                        bFront++;
                    }
                    else
                    {
                        //string test = a.Substring(aFront);
                        //string test2 = b.Substring(bFront);  by using my own method I don't need the substring


                        //I also shouldn't Compare multiple times  its doing this   and  hitting so it does ComareTo checks result
                        //then moves forward I only need it once. 
                        //+ 1 aFront and + 1 bFront because I know that if this line hits the current indexs are equal. 
                        int comparedItems = comparision(a, b, aFront + 1, bFront + 1);
                        // now instead of running a O(1) and possibly O(2^n) depending on Microsfots implemnation i do it once save result
                        //and use it in my conditional checks. 
                        
                        if (comparedItems < 0)
                        {
                            //result += a[aFront].ToString();
                            result.Append(a[aFront]);
                            aFront++;
                        }
                        else if (comparedItems > 0)
                        {
                            //result += b[bFront].ToString();
                            result.Append(b[bFront]);
                            bFront++;
                        }
                        else
                        {
                            //result += a[aFront].ToString();
                            result.Append(a[aFront]);
                            aFront++;
                        }
                    }
                }

                else if (bFront < b.Length)
                {
                    //result += b[bFront].ToString();
                    result.Append(b[bFront]);
                    bFront++;
                }
                else if (aFront < a.Length)
                {
                    //result += a[aFront].ToString();
                    result.Append(a[aFront]);
                    aFront++;
                }
                else
                {
                    Console.WriteLine("Else block");
                }
            }
            //incase the while loop ends early 
            if (aFront < a.Length)
            {
                //result += a.Substring(aFront);
                result.Append(a.Substring(aFront));
            }
            else if (bFront < b.Length)
            {
                //result += b.Substring(bFront);
                result.Append(b.Substring(bFront));
            }
            Console.WriteLine($"The a.Length {a.Length} and this is where aFront is {aFront}");
            Console.WriteLine($"The b.Length {b.Length} and this where bFront is {bFront}");
            return result.ToString();
        }
        //13/18 test case failed due to time out 
        static string morganAndString2(string a, string b)
        {
            string result = "";
            int aFront = 0;
            int bFront = 0;
            while (aFront < a.Length || bFront <= b.Length - 1)
            {
                if (aFront < a.Length && bFront < b.Length)
                {
                    if (a[aFront] < b[bFront])
                    {
                        result += a[aFront].ToString();
                        aFront++;
                    }
                    else if (b[bFront] < a[aFront])
                    {
                        result += b[bFront].ToString();
                        bFront++;
                    }
                    else
                    {
                        string test = a.Substring(aFront);
                        string test2 = b.Substring(bFront);
                        if (test.CompareTo(test2) < 0)
                        {
                            result += a[aFront].ToString();
                            aFront++;
                        }
                        else if (test.CompareTo(test2) > 0)
                        {
                            result += b[bFront].ToString();
                            bFront++;
                        }
                        else
                        {
                            result += a[aFront].ToString();
                            aFront++;
                        }
                    }
                }
                else if (bFront < b.Length)
                {
                    result += b[bFront].ToString();
                    bFront++;
                }
                else if (aFront < a.Length)
                {
                    result += a[aFront].ToString();
                    aFront++;
                }
                else
                {
                    Console.WriteLine("Else block");
                }
            }
            return result;
        }
        //17/18 test casse failed also timed out 
        static string morganAndString1(string a, string b)
        {
            string result = "";
            int aFront = 0;
            int bFront = 0;
            while (aFront < a.Length || bFront < b.Length)
            {
                if (aFront < a.Length && bFront < b.Length)
                {
                    if (a[aFront] <= b[bFront])
                    {
                        result += a[aFront].ToString();
                        aFront++;
                    }
                    else
                    {
                        result += b[bFront].ToString();
                        bFront++;
                    }
                }
                else if (bFront < b.Length)
                {
                    result += b[bFront].ToString();
                    bFront++;
                }
                else if (aFront < a.Length)
                {
                    result += a[aFront].ToString();
                    aFront++;
                }
            }
            return result;
        }
        static void Main(string[] args)
        {
            string first = "MZBMWEYYDIADTLCOUEGMDBYFWURPWBPUVHIFNUAPWYNDMHTQVKGKBHTYTSZOTWFLEGSJZZSZFWTZFPNSCGUEMWRCZQXYCIVDQNKYPNXNNPMUDUHZNOAQUUDHAVRNCWFWUJPCMIGGJMCMKKBNJFEODXKGJGWXTRXINGIQQUHUWQHDSWXXRXUZZFHKPLWUNFAGPPCOILDAGKTGDARVEUSJUQFISTULGBGLWMFGZRNYXRYETWZHLNFEWCZMNOOZLQATUGMDJWGZCFABBKOXYJXKATJMPPRSWKDKOBDAGWDWXSUFEESRVNCBSZCEPIGPBZUZOOOTORZFSKCWBQORVWDRMKLFDCZATFARQDKELALXZXILLKFDVPFPXABQLNGDSCRENTZAMZTVVCVRTCMBQLIZIJDWTUYFRXOLSYSXLFEBPOLCMQSPPMRFKYUNYDTMWBEXSNGXHWVROANDFQJAMZKPTTSLILDLRKJOYRPXUGICEAHGIAKEVSJOADMKFNKSWRAWKJXWCMCCIABZBRSKZAZJQTLKIQYDPTPKCSDGCQJSHZNDPVANNRYWFRNRGHLJJQRXPXNLKCWDPDKSWVTXGANWWYOOSXTNEXEEZJXOUYFJHNWPQFXEXZXFOLPCFBLPNCETYHTRWXKBOSCCSKXBUVCROSAVNPXZOEOYYGHBBQKFLSUTPWMHQWKVIRMLFCPIDLQYIKZMNTTAIFCBOPNWEZESOMKXHAIAFMVKBJAISYRBTULTPNXBCJMORNQUMATSERHIEQGGRIVOUWFNBNGHDFALLCPRVNGIKCAMVPRZAEAPQMILWKBKGOGOCNIAAISORFQXZJZTVCGVZLCEDWNEZBWXMPOBMRVXASKWVVWQUUDRNWHMMZHEQXIWHFUXAVLWFTGYXXHPYGSPVWDNVMGNWNPKDRNZNZVRKMJJMWISYRDKODOAFWSJFUVMEEWPDWPIYMWBHOXEBJIBXPHIEFGTSAWCDIVTLTRSHJQNKKMDTJGSCNOZMOJNHIGIPPJEMZZZBCVOYPLXENFFMFDZDIOJUODGBULVIVHTBHAYEEEBIACTYAOVQBIVUDYDGXWSGMHLRACAAYIPSOJLEQHPYGSHCVXWWLNEBLFMNQGDDQPCJXZFTWRLGPTRKBKRLWGSNLCAUDZDUJBBQLFZIKGXOHVHTUVCJMMWVHKXCGYEKJKKLCJQONEPPYDPSPIWQBKPSUNEDQIXLSIFCOKFRCVRSZCVDYFWUHTZPTBBNXBHQJOMXRBHJQXVDASERFFCVKECQYLQPRAWYQUEVHVUZCVFMBEWPXICSKPMZSBSUSMADDQKWGFIRLZZBCZEGHMUHXNXEJRSPCVQEJWOWQSFHOVHCTWNHUUVEPRRIYFWSTSJDECYYFJBJSDLEGQLKLXIYRWVLPPOMDFDTVTKWOKIWWPEJXIBDKNPONPSXRYTOQGJRTJPATMDLHMQEGVJHVLEHSYKRLVVSSMAMBZUSXUSZYYBDRDVZDBEXSGLYOKVMYKIFWGFNCSACJLKATHFMNLCTSQEJFOXYVMTOTTLHRLYPBZISUCLLQGAAITMXPMFINSOWJAAWSNMLUIZVPJBEWQCIPCQWVSQFBEUTDCSDRVIOZOBDYTWSIMSEETQCKLNKXTAWOXIYSVZRAKQEISPNDDXTNFQALSWXSMKSFOOIWXYNAMDJXNSMKIEWKWDPZJPKIBCBBMZBIWPMJCZCEHTCZQJZLKGYVSZPUUVETDFLUUHXPEOPUXMDYLAYSTTENJMCEDCUMOEEICJTXKKVXCXJOWRCVLTTSQHWKBBMIGTQLOVJGVIYZGCQJVPVOTWUCSETIDICYHTCMAJPHXYYOOEOVUXVUPLOKLPBOVQDWDYPBXGAJUQWADGEEDJKGURHSXDVYLMYFJQLWZLDROUYLQOBSGEMWDOIBQVCYEDFVQOPFHKQMHUSXQACOOGJXCOXBFZLWCXFVQAAVFEGKCIRQQGDYHLJMAQZQIFUAOUBUKYPAVEBVDUJGSULAHKPRFPNZQAQGVFDXWTQFLCEILPMSZIZFWBONXPLCYQITTPKPBCFSESGFBIQNIPOLEFRELPHJTHQRZSPHBNUMGRIFMWIZTFUHQIBGAXDVYSYVGXLSPMINYKBYUMEPUBRXUOAVYOVDBIELZDOBGQCJZNJBEXALKGHYWIOXZBVXZFCSHCOZMEFWCRVYIBJDFQVQMHXDPCCJODLGVKPLRFDEDPZOPRFEECHWSZHVCDOOEJLCHCWCEKTFRDMOWHSUEAVBRAWMIHZSNFHRAFBQEAWDIXZNPPFWIEAIVTMPQZQTSVNVWJMGVHUESSSAXGMOYWDGVWIOUZUQDEBIJCQYCFTAFTUWTGXAVEMCIUQMXENPRPMYZREXSHNVTESSTWHYTMATXBUZXPSTPYGFXPHPFCKJDBFBXIMEESWYNDFHOMCNWJTFRUVZWBHLZBVEBYEUCEPGCDPMGHCIBFXGRVNACXWLOPXSVZCLWYMWDMOLJTAGUWUVHXIFDJQSHLQAUEGLQRBXUWPOZFVEGDPVNWMEDXBMXAGIMXMXGJLNNFKWBRQSHXFCANWPOFLQEJAFDKTNLPGVLEXCYGLRZBKHCMXVUOBYXCXZXQMLSWVLMBVCSDTEFCQTMLILWZTBSCFHJTCYTONMLIIVRKBBLVNMHIPRGERYRPJPJYKCHNEYFYMIEFYMAJRNWJSLYTBXMDUWTFZAFKXYFMCNLJSEBZLEYGEGUUJMKYYLFMMVVILJWGCYHRDLDKZFZGTVMOWLBEQTJSODVHBUUMEXPPCDXQHCEQLDFAVGQLVITUZZNGJEOTBKJZCRTGGLUIAMNCORBKIWDOZITQGQIPHVWUIJWHSMGOGXOMLUQURCWOGGHHJJCEKGGLLAMQGXHCFCMRAKGROJGXIZWXASCASINZXCDXEWCULOFITYLHXHZXMJDLISUPDYLSHAHCIPZOPTULLYISXSCZJQAWAGNNGCGGIWKHNARJISVCDPZGGTLLUDVCSJXEUBFGYJDIMTPFTGYTKFNTYLNFLBFUTSYOVXMLIGOAIQZLXWFRSLJUCDXSSAMGCIFDLJASHCJJWHLKQNIPXZJGLPTEDZXMTHVZGRUHHCKUFDECAKRRZOQFQCDUZHJSDASKQGLQLNNBKUUYTQTHFCJRAAWTBCCURPZPUMCSMQHEBHQRFIGAMBLZXYCVEVLUZCUQXVRJGEKYAOFVRVCOHLDAVKJIYKHCCMNJPDHKKIMPSMVCYQXLGWLBHLDKJLZWTHKFNIZEBVLGOZRNWWVXDCKGNCKQTKQIDHOOCIWRPKXESLDTGXTAURGLBGMPYQLPZBNSBZHANBIYPUZIQURWRBRBXMHBRDPDRERBOBAJULDLWRPKRTFBLSPNKXYITIOHLPGJLCKTLAQSALNOIPHBTUYRRGHSEZNKMZUKAIIHATZTTIYLACTADTNINWCSUFBYNJKXAAJNAGFEVSCFUHOAJUQMISGBBSXQBYLMRASZACPLIUGLQYUZBNIZXXJXNNTSCKJZJZJMMYFMVXJAOPVEFHWHBYOAPKQEDYDDTRPBLPORURSKNPBTAMZKKZRRDDCMRAYGLNJUIKQYNJAUCAQEKHCWXDQPDOHYCVAEXJYULGVWTOVQGSFIVKVUNQDEKHNGXJYYCSPVZULHKYWGQJGAQCLPSXNSERDNRJXROZMXTJTVOSSYQPVOTKHMBQAXIQXUXZLZTKSOHUJRTAIMPDESFQJBJIFGYBEBNUIICFJTEQFVSYRWWJZISSAIMGCUSLEIACQXJIPDTILJQRBLDLIRSIEWJPLNAIDVVIXJQTQJDOZLDBBEEMVMVEQLHJZTCOUOSTCGROMEKRINQBGVGLJHVEAONQKRTJJTLGBKRNYOIXIRSLFSZFQIVGKAFLGKCTVBVKSIPWOMQXLYQXHLBCEUHBJBFNHOFCGPGWDSEFFYCTHMLPCQEJGSKWJKBKBBMIFNURNWYHEVSOQZMTVZGFIQAJFRGYUZXNRTXECTCNLYOISBGLPDBJBSLXLPOYMRCXMDTQHCNLVTQDWFTUZGBDXSYSCWBRGUOSTBELNVTAQDMKMIHMOXQTQLXVLSSSISVQVVZOTOYQRYUYQWOKNNQCQGGYSRQPKRCCVYHXSJMHOQOYOCWCRIPLARJOYIQRMMPMUEQBSBLJDDWRUMAUCZFZIODPUDHEEXALBWPIYPMDJLMWTGDRZHPXNEOFHQZJDMURGVMRWDOTUWYKNLRBVUVTNHIOUVQITGYFGFIEONBAAPYHWPCRMEHXCPKIJZFIAYFVOXKPASYIWXMRAHUWLAOOVREJHPBIIQMDPTEFNNGFZTQHHIFMTHLXKQBHISDXBGOTYSPNVUSLDLFCNOGNDBCJXQDUSSOEGPWPRFUSSJQHKHBHPHTJKYWSEBAAVJAUPVDBXFITSYOJEVYCPXWYXFKZDESBNOACIXWTRHQHFIMUKKDINHWYXNJKMOPBHOPLFMPLQJYFIAZKXXDMZBNDUOAXJDAEVIBEQACBDXWRGSFVPLKHFPNLPFLZNDTLUWRIGJJTTHZHPOWRYLZZYVNATBAWWXBYDUUSBDHBGGAWQVLRBMPGKNZVLKEEAVEKLVQUTZZDRQONOWWVWJFXXLTXMXKKPZKYFZSVYVKVNYCVPNPQBRIBPEMMAYFPNIWAZHBJEZMENVESSYPPASIFGSSFWVEUXASVKMPXZVZOOPTVOZCYQPXANFTSVGLUXXMWTERTADXMAMTXRDQNPLOAGMMGETHVBNEXECQIDNZPSZHLHPSOEMJFRDPFAWNFHYQUWIWNUQZTLHKLUBMJMQIMOYUMBUPRIGZZXVKJJOXHYUSUKLAIYMPOPZYVEWMVQMSOISXZUHSQAZGGGNMRUXDKVGPUCMTZOSJLRPDWAEKOXTRAWMHIJIZUQRLNKIEYLAIIYMTDFTXJUUCJIPOZZHGBIZWMNCRCABVMQWAFVMUXYYBVCIURGYAPTMPVLCNYUHAYTABVKSPWISDSDSPXYSOPDEMQDGQAXUOOOMPKYSOKVZZHDPMVNURNAULFUTCUKWGTXNQXMUKBXNLIDVYSEWBWMSNSRFPXXFTMJUEDKSDMNBKLSRNJPWVPQWMXXTFFGTBDBJIFNRVWZTBDJRBAZXOTGFQVYQPGRDOJJGJVQIWLDVJINOEEBSCJCISYVUTVHVMIYCOYSZFEXXAFMKAXSXWKTFCFAILJABWUNYLERKSNHSAQNHOVLTHJVSUMBZQSJHRLLOVOYUBXMXBYUNVAADRVBEJOORBYHWUNRHNIXRHWODLXNGPQURFPIQDFTESWNRNYFNRLLTCTMJVSJXPFQSGPZEQQTREWWSCEICEANFVODTIOKDWTZOQOBOIIOXGOMODFASZWZGUZZYQITDDCINEMYPCBFELHMHYPBTBWMCHQHYGFTVAOFPXWMPMFBCFNCLQEXJGVZPQBXCQOSKJDXWHIMEUWXOPZAFASCSXAWAROBLPMAMKLRWLZNPLGSPUZVNUBPUDIBPTDSLAAGXAAACQRSFVHCLAEDSMLKJAQSOQGFPOVIGXFVHLTPWPTOJSARDOZOGRLTULBERIYWIREEBJDDKDHPYLEYPYLEVVGLKCKUBMYGXZQMEEYEHJEHKNBKPRSVDGJOIZZGJSZEBTAQQGZWYFGDCBKDGXZURJPOAHRHDPQEXZSRPGVDUTABOGKWKUEHFZWHVAMSNTZUVCRQZPLXHYKIAOAPJZKZNMLSNEZSSKDLOSIYFAWAZNBUWENOVCSFKFUHNTGLVESXSRRNZKBHZKHZMVKJEVSRBDICLCKMSGPGNGYCKZVGYSVWCGWAYJOKQACTFXTIVFBDWPRUFIVTGGZHBPVLXFKISDNEOGDSEENJLEWROBJHPPPJCZYXEAIQANAZTKSNPFWYHDJVIPGWZZNMNNXWRAIIEICSCDHRYZVRHTOPRRATXUFCITHOKIOGUDGGZPVJCTBAHNZDWTOKIATSRIQZWEDRRFZBRKGVYNBBFOMOIAWWMMJIQVHDLNSVWNWBKTEHYKEVHACVDFLMNKRLJMIJVFXDVDYDMVKJSBPMCGMNFTSEUMHBDIOHZCJVPAYXQWDPYCHQCTUDLKEDTBJDUQBZWXVOXJLAJSTAOQNRRRPXCNDMWHLWDYGNNORDXMUJNZLKEAMDXANOKVBVPLRWXZIJPJKULODEULUEPKSLYIUZYWPYYFOCICAZYEWQYULJLFMTHLIEOLXUYPKQPEMFJJPSWULKNGYTFFIXVOIYUUSYBDMYGPUGZHUERHLFELEMNNAVEFSUQIKNYEDQTXYEKPWPDPCUUIMOSYTASPBMINXPVBCBQOLOSVBRPPGPYVIXLSXHQDRPHMJPIHERRWHDWOSAPJFTERGJSZLZWCIHWCUEGFCPSAQJNNFFMVVEUPTMNEFBHOHJBCAOCDWJYAYLNVZECIUCLQUQEDNWKYFYMGRFMZXQPEJCIXXPPQGVUAWUTGRMEZJKTEOFJBNRVZZKVJTACFXJJOKISAVSGRSLRYXFQGRMDSQWPTAJBQZVETHULJBDATXGHFZQRW";
            string second = "";
            //string answer = "";


            string third = "BABAABABBBAA";
            string fourth = "BABAABABBBAA";

            string fifth = "JACK";
            string sixth = "DANIEL";


            string result = morganAndString(first, second);
            result = morganAndString(third, fourth);
            result = morganAndString(fifth, sixth);
            //bool test = false;
            //for (int index = 0; index < answer.Length; index++)
            //{
            //    if (answer[index].Equals(result[index]))
            //    {
            //        Console.Write(result[index]);
            //        test = false;
            //    }
            //    else
            //    {
            //        if (test != true)
            //        {
            //            test = true;
            //            Console.WriteLine("WRONG ANSWER RECEIVED");
            //            Console.WriteLine();
            //            Console.Write(result[index]);
            //        }
            //        else
            //        {
            //            Console.Write(result[index]);
            //        }
            //    }
            //}
            

            Console.WriteLine(result);
        }
    }
}
